#!/usr/bin/env node
'use strict';

var program  = require('commander');
var fs = require('fs-extended');
var pwuid = require('pwuid');
var curl = require('curlrequest');
var path = require('path');
var yopath = path.join(pwuid().dir, '.yofile');
//require('autocmdr/lib/completion')(program);

program
	.version('0.0.1');

program
	.option('-t, --token [value]', 'Set Yo API token')
	.option('-a, --all', 'Yo all subscribers')
	.option('-l, --link [value]', 'Yo an image or link')
  .option('-s, --subscribers', 'Get subscriber count');

program
	.parse(process.argv);

// if token argument, write yofile
//console.log(program.args, program.args.length);
if (program.token) {
  fs.writeFileSync(yopath, program.token, {encoding: 'utf-8'});
	console.log('Saved token!');
	process.exit(0);
}

fs.ensureFileSync(yopath);

var tokenFromFile = fs.readFileSync(yopath, {encoding: 'utf-8'});

//if no yofile data, exit
if (!tokenFromFile) {
  console.log('Please save your token first');
  program.outputHelp();
  process.exit(1);
}

//if no other args, exit
if (!program.token && program.args.length < 1 && !program.all && !program.link) {
	console.log('Please enter arguments correctly.');
  program.outputHelp();
  process.exit(1);
}

//figure out which param username is sent in as
//console.log("about to yo:", program.args[0], "from key", tokenFromFile);
var url = 'http://api.justyo.co/yo/';

if (program.all) {
	url = 'https://api.justyo.co/yoall/'
}

var params = 'api_token='+ tokenFromFile + '&username=' + program.args[0];

if (program.link) {
	params += '&link=' + program.link;	
}

var options = {
  url: url,
	method: 'POST',
	data: params
};

curl.request(options, function(err){
	if (err)	{
		console.log('Failed to send Yo:', err);
		process.exit(1);
	} else {
		var finishStatement = 'Yo\'d ';
		if (program.link) {
		  finishStatement = 'Yo\'d a link to ';
		}
		if (program.all) {
			finishStatement +='all subscribers.';
		} else if (program.args[0]){
			finishStatement += program.args[0];
		}	
		console.log(finishStatement);
		process.exit(0);	
	}
});
